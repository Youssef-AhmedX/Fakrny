@page "/Courses"
@inherits BasePage<CourseDto>

<PageTitle>Courses</PageTitle>
<MudBreadcrumbs Items="breadcrumbItems"></MudBreadcrumbs>

<MudCard Elevation="25">
    <MudCardContent>
        <MudTable Dense="true" Elevation="0" FixedHeader="true" Height="400px"
                  Loading="@(isLoading)" LoadingProgressColor="Color.Info"
                  Items="courses" Hover="true" SortLabel="Sort By"
                  Filter="new Func<CourseDto,bool>(FilterFunc)">

            <ToolBarContent>
                <MudText Class="me-1" Typo="Typo.h6">Courses</MudText>
                <MudIconButton OnClick="() => OpenForm()" Color="Color.Success" Icon="@Icons.Material.Filled.Add"></MudIconButton>
                <MudSpacer />
                <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>

            <HeaderContent>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<CourseDto, object>(x=>x.Name)">Name</MudTableSortLabel></MudTh>
                <MudTh Style="text-align:center"><MudTableSortLabel SortBy="new Func<CourseDto, object>(x=>x.Author.Name)">Author</MudTableSortLabel></MudTh>
                <MudTh Style="text-align:center"><MudTableSortLabel SortBy="new Func<CourseDto, object>(x=>x.DurationInMin)">Duration</MudTableSortLabel></MudTh>
                <MudTh Style="text-align:center">Status</MudTh>
                <MudTh Style="text-align:center">Actions</MudTh>
            </HeaderContent>

            <RowTemplate>
                <MudTd DataLabel="Name">
                    <MudText Style="display: flex;align-items: center;">
                        @context.Name
                        @if (context.IsPaid)
                        {
                            <MudIcon Class="ms-2" Icon="@Icons.Material.Filled.Paid" Color="Color.Warning" />
                        }
                    </MudText>
                </MudTd>
                <MudTd Style="text-align:center" DataLabel="Author">@context.Author.Name</MudTd>
                <MudTd Style="text-align:center" DataLabel="Duration">@HandelDuration(context.DurationInMin)</MudTd>
                <MudTd Style="text-align:center" DataLabel="Status">
                    <MudChip Size="Size.Small"
                             Icon="@(context.IsDeleted? Icons.Material.Filled.Cancel : Icons.Material.Outlined.Check)"
                             Color="@(context.IsDeleted? Color.Error : Color.Success)">
                        @(context.IsDeleted ? "Deleted" : "Avaliable")
                    </MudChip>
                </MudTd>
                <MudTd Style="text-align:center" DataLabel="Actions">
                    <MudButtonGroup Size="Size.Small" Color="Color.Info" Variant="Variant.Outlined">
                        <MudIconButton OnClick="() => OpenForm(context.Id)" Disabled="isDisable" Icon="@Icons.Material.Filled.Edit"/>
                        <MudIconButton Disabled="isDisable"
                                       OnClick="() => ChangeStatus(context.Id,context.Name)"
                                       Icon="@(context.IsDeleted? Icons.Material.Filled.CheckCircle : Icons.Material.Filled.Cancel)"
                                       Color="@(context.IsDeleted? Color.Success : Color.Error)"/>
                        <MudIconButton Href=@($"/Courses/Details/{context.Id}") Disabled="isDisable" Icon="@Icons.Material.Filled.Info" />
                    </MudButtonGroup>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager HorizontalAlignment="HorizontalAlignment.Center" InfoFormat="{first_item}-{last_item} of {all_items}" PageSizeOptions="new int[]{25, 50, 100,int.MaxValue}" />
            </PagerContent>
        </MudTable>
    </MudCardContent>
</MudCard>


